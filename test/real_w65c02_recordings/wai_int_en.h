/*
 * 
 *     .org $8000
 * reset:
 *     ldx #$ff
 *     txs
 *     clv
 *     cli
 *     clc
 *     wai
 *     nop
 *     nop
 *     nop
 *     nop
 *     nop
 *     .org $a000
 * irq:
 * nmi:
 *     rti
 * 
 *     .org $fffa
 *     .word nmi
 *     .word reset
 *     .word irq
 * 
*/
ProgramFragment wai_int_en_prog[] = {
   {0x8000, 12, {0xa2, 0xff, 0x9a, 0xb8, 0x58, 0x18, 0xcb, 0xea, 0xea, 0xea, 0xea, 0xea}},
   {0xa000, 1, {0x40}},
   {0xfffb, 5, {0xa0, 0x00, 0x80, 0x00, 0xa0}},
   {0, 0, {0}}
};
PinState wai_int_en_0_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fe, 0x06},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xfffe, 0x00},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xffff, 0xa0},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0xa000, 0x40},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0xa001, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x01fc, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x01fe, 0x06},
};
const size_t wai_int_en_0_cycles = sizeof(wai_int_en_0_pin)/sizeof(wai_int_en_0_pin[0]);
PinState wai_int_en_1_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fe, 0x06},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xfffe, 0x00},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xffff, 0xa0},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0xa000, 0x40},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0xa001, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x01fc, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x01fe, 0x06},
};
const size_t wai_int_en_1_cycles = sizeof(wai_int_en_1_pin)/sizeof(wai_int_en_1_pin[0]);
PinState wai_int_en_2_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fe, 0x07},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xfffe, 0x00},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xffff, 0xa0},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0xa000, 0x40},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0xa001, 0x00},
};
const size_t wai_int_en_2_cycles = sizeof(wai_int_en_2_pin)/sizeof(wai_int_en_2_pin[0]);
PinState wai_int_en_3_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fe, 0x07},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xfffe, 0x00},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xffff, 0xa0},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0xa000, 0x40},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0xa001, 0x00},
};
const size_t wai_int_en_3_cycles = sizeof(wai_int_en_3_pin)/sizeof(wai_int_en_3_pin[0]);
PinState wai_int_en_4_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fe, 0x07},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xfffe, 0x00},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xffff, 0xa0},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0xa000, 0x40},
};
const size_t wai_int_en_4_cycles = sizeof(wai_int_en_4_pin)/sizeof(wai_int_en_4_pin[0]);
PinState wai_int_en_5_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fe, 0x07},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xfffe, 0x00},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xffff, 0xa0},
};
const size_t wai_int_en_5_cycles = sizeof(wai_int_en_5_pin)/sizeof(wai_int_en_5_pin[0]);
PinState wai_int_en_6_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fe, 0x07},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xfffe, 0x00},
};
const size_t wai_int_en_6_cycles = sizeof(wai_int_en_6_pin)/sizeof(wai_int_en_6_pin[0]);
PinState wai_int_en_7_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fe, 0x07},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fd, 0xa0},
};
const size_t wai_int_en_7_cycles = sizeof(wai_int_en_7_pin)/sizeof(wai_int_en_7_pin[0]);
PinState wai_int_en_8_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fe, 0x07},
};
const size_t wai_int_en_8_cycles = sizeof(wai_int_en_8_pin)/sizeof(wai_int_en_8_pin[0]);
PinState wai_int_en_9_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
};
const size_t wai_int_en_9_cycles = sizeof(wai_int_en_9_pin)/sizeof(wai_int_en_9_pin[0]);
PinState wai_int_en_10_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
};
const size_t wai_int_en_10_cycles = sizeof(wai_int_en_10_pin)/sizeof(wai_int_en_10_pin[0]);
PinState wai_int_en_11_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01ff, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fe, 0x06},
   {1, 1, 1, 1, 1, 0, 1, 1, 0, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xfffe, 0x00},
   {1, 1, 1, 1, 1, 0, 0, 1, 1, 0xffff, 0xa0},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0xa000, 0x40},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0xa001, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x01fc, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x01fd, 0xa0},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x01fe, 0x06},
};
const size_t wai_int_en_11_cycles = sizeof(wai_int_en_11_pin)/sizeof(wai_int_en_11_pin[0]);
PinState wai_int_en_12_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 0, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
};
const size_t wai_int_en_12_cycles = sizeof(wai_int_en_12_pin)/sizeof(wai_int_en_12_pin[0]);
PinState wai_int_en_13_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8009, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8009, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800a, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800a, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800b, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800b, 0xea},
};
const size_t wai_int_en_13_cycles = sizeof(wai_int_en_13_pin)/sizeof(wai_int_en_13_pin[0]);
PinState wai_int_en_14_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8009, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8009, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800a, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800a, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800b, 0xea},
};
const size_t wai_int_en_14_cycles = sizeof(wai_int_en_14_pin)/sizeof(wai_int_en_14_pin[0]);
PinState wai_int_en_15_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8009, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8009, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800a, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800a, 0xea},
};
const size_t wai_int_en_15_cycles = sizeof(wai_int_en_15_pin)/sizeof(wai_int_en_15_pin[0]);
PinState wai_int_en_16_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8009, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8009, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800a, 0xea},
};
const size_t wai_int_en_16_cycles = sizeof(wai_int_en_16_pin)/sizeof(wai_int_en_16_pin[0]);
PinState wai_int_en_17_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8009, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8009, 0xea},
};
const size_t wai_int_en_17_cycles = sizeof(wai_int_en_17_pin)/sizeof(wai_int_en_17_pin[0]);
PinState wai_int_en_18_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8009, 0xea},
};
const size_t wai_int_en_18_cycles = sizeof(wai_int_en_18_pin)/sizeof(wai_int_en_18_pin[0]);
PinState wai_int_en_19_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x9a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8003, 0xb8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0x58},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8005, 0x18},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xcb},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 0, 1, 0, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8007, 0xea},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8008, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8008, 0xea},
};
const size_t wai_int_en_19_cycles = sizeof(wai_int_en_19_pin)/sizeof(wai_int_en_19_pin[0]);
PinTestSuite wai_int_en_suite[] = {
   {wai_int_en_0_pin, wai_int_en_0_cycles},
   {wai_int_en_1_pin, wai_int_en_1_cycles},
   {wai_int_en_2_pin, wai_int_en_2_cycles},
   {wai_int_en_3_pin, wai_int_en_3_cycles},
   {wai_int_en_4_pin, wai_int_en_4_cycles},
   {wai_int_en_5_pin, wai_int_en_5_cycles},
   {wai_int_en_6_pin, wai_int_en_6_cycles},
   {wai_int_en_7_pin, wai_int_en_7_cycles},
   {wai_int_en_8_pin, wai_int_en_8_cycles},
   {wai_int_en_9_pin, wai_int_en_9_cycles},
   {wai_int_en_10_pin, wai_int_en_10_cycles},
   {wai_int_en_11_pin, wai_int_en_11_cycles},
   {wai_int_en_12_pin, wai_int_en_12_cycles},
   {wai_int_en_13_pin, wai_int_en_13_cycles},
   {wai_int_en_14_pin, wai_int_en_14_cycles},
   {wai_int_en_15_pin, wai_int_en_15_cycles},
   {wai_int_en_16_pin, wai_int_en_16_cycles},
   {wai_int_en_17_pin, wai_int_en_17_cycles},
   {wai_int_en_18_pin, wai_int_en_18_cycles},
   {wai_int_en_19_pin, wai_int_en_19_cycles},
   {0, 0}
};
