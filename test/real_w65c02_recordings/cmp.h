/*
 * 
 *      .org $a
 *      .byte $01
 *      .byte $02
 *      .word $9000
 *      .word $8fff
 *      
 *      .org $8000
 *  reset:
 *      ldx #$1
 *      ldy #$2
 *      cmp $9000
 *      cpx $9000
 *      cpy $9000
 *      cmp $9000,X
 *      cmp $8fff,X
 *      cmp $9000,Y
 *      cmp $8fff,Y
 *      cmp #$ee
 *      cpx #$ee
 *      cpy #$ee
 *      cmp $a
 *      cpx $a
 *      cpy $a
 *      cmp ($b,X)
 *      cmp $a,X
 *      cmp ($c)
 *      cmp ($c),Y
 *      cmp ($e),Y
 *      nop
 *      
 *      .org $9000
 *      .byte $01, $02
 *      
 *      .org $a000
 *  irq:
 *  nmi:
 *      rti
 * 
 *      .org $fffa
 *      .word nmi
 *      .word reset
 *      .word irq
 *  
*/
ProgramFragment cmp_prog[] = {
   {0x000a, 6, {0x01, 0x02, 0x00, 0x90, 0xff, 0x8f}},
   {0x8000, 10, {0xa2, 0x01, 0xa0, 0x02, 0xcd, 0x00, 0x90, 0xec, 0x00, 0x90}},
   {0x800a, 16, {0xcc, 0x00, 0x90, 0xdd, 0x00, 0x90, 0xdd, 0xff, 0x8f, 0xd9, 0x00, 0x90, 0xd9, 0xff, 0x8f, 0xc9}},
   {0x801a, 16, {0xee, 0xe0, 0xee, 0xc0, 0xee, 0xc5, 0x0a, 0xe4, 0x0a, 0xc4, 0x0a, 0xc1, 0x0b, 0xd5, 0x0a, 0xd2}},
   {0x802a, 6, {0x0c, 0xd1, 0x0c, 0xd1, 0x0e, 0xea}},
   {0x9000, 2, {0x01, 0x02}},
   {0xa000, 1, {0x40}},
   {0xfffb, 5, {0xa0, 0x00, 0x80, 0x00, 0xa0}},
   {0, 0, {0}}
};
PinState cmp_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0xa0},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0x02},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0xcd},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0x90},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9000, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8007, 0xec},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8008, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8009, 0x90},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9000, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800a, 0xcc},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800b, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800c, 0x90},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9000, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800d, 0xdd},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800e, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800f, 0x90},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9001, 0x02},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8010, 0xdd},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8011, 0xff},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8012, 0x8f},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8012, 0x8f},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9000, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8013, 0xd9},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8014, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8015, 0x90},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9002, 0x00},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8016, 0xd9},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8017, 0xff},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8018, 0x8f},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8018, 0x8f},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9001, 0x02},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8019, 0xc9},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x801a, 0xee},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x801b, 0xe0},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x801c, 0xee},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x801d, 0xc0},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x801e, 0xee},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x801f, 0xc5},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8020, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000a, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8021, 0xe4},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8022, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000a, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8023, 0xc4},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8024, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000a, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8025, 0xc1},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8026, 0x0b},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8026, 0x0b},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000c, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000d, 0x90},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9000, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8027, 0xd5},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8028, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8028, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000b, 0x02},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8029, 0xd2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x802a, 0x0c},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000c, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000d, 0x90},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9000, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x802b, 0xd1},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x802c, 0x0c},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000c, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000d, 0x90},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9002, 0x00},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x802d, 0xd1},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x802e, 0x0e},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000e, 0xff},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000f, 0x8f},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000f, 0x8f},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9001, 0x02},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x802f, 0xea},
};
const size_t cmp_cycles = sizeof(cmp_pin)/sizeof(cmp_pin[0]);
