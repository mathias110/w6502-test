/*
 * 
 *      .org $a
 *      .byte $01
 *      .byte $75
 * 
 *      .org $8000
 *  reset:
 *      ldx #$1
 *      ldy #$2
 *      inc $9000
 *      inc $9000,X
 *      inc $8fff,X
 *      ina
 *      inc $a
 *      inc $a,X
 *      inx 
 *      iny
 *      nop
 * 
 *      .org $9000
 *      .byte $05, $02
 * 
 *      .org $a000
 *  irq:
 *  nmi:
 *      rti
 * 
 *      .org $fffa
 *      .word nmi
 *      .word reset
 *      .word irq
 *  
*/
ProgramFragment inc_prog[] = {
   {0x000a, 2, {0x01, 0x75}},
   {0x8000, 10, {0xa2, 0x01, 0xa0, 0x02, 0xee, 0x00, 0x90, 0xfe, 0x00, 0x90}},
   {0x800a, 11, {0xfe, 0xff, 0x8f, 0x1a, 0xe6, 0x0a, 0xf6, 0x0a, 0xe8, 0xc8, 0xea}},
   {0x9000, 2, {0x05, 0x02}},
   {0xa000, 1, {0x40}},
   {0xfffb, 5, {0xa0, 0x00, 0x80, 0x00, 0xa0}},
   {0, 0, {0}}
};
PinState inc_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0xa2},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0xa0},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0x02},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0xee},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8006, 0x90},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9000, 0x05},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x9000, 0x05},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x9000, 0x06},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8007, 0xfe},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8008, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8009, 0x90},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9001, 0x02},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9001, 0x02},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x9001, 0x02},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x9001, 0x03},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800a, 0xfe},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800b, 0xff},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800c, 0x8f},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800c, 0x8f},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x9000, 0x06},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x9000, 0x06},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x9000, 0x07},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800d, 0x1a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800e, 0xe6},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800e, 0xe6},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800f, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000a, 0x01},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x01},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0x02},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8010, 0xf6},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8011, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8011, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x000b, 0x75},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000b, 0x75},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000b, 0x76},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8012, 0xe8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8013, 0xc8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8013, 0xc8},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8014, 0xea},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8014, 0xea},
};
const size_t inc_cycles = sizeof(inc_pin)/sizeof(inc_pin[0]);
