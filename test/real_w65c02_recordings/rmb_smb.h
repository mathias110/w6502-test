/*
 * 
 *         .org $8000
 *     reset:
 *         smb0 $a
 *         smb1 $a
 *         smb2 $a
 *         smb3 $a
 *         smb4 $a
 *         smb5 $a
 *         smb6 $a
 *         smb7 $a
 *         rmb0 $a
 *         rmb1 $a
 *         rmb2 $a
 *         rmb3 $a
 *         rmb4 $a
 *         rmb5 $a
 *         rmb6 $a
 *         rmb7 $a
 *         nop
 * 
 *         .org $a000
 *     irq:
 *     nmi:
 *         rti
 * 
 *         .org $fffa
 *         .word nmi
 *         .word reset
 *         .word irq
 *     
*/
ProgramFragment rmb_smb_prog[] = {
   {0x8000, 16, {0x87, 0x0a, 0x97, 0x0a, 0xa7, 0x0a, 0xb7, 0x0a, 0xc7, 0x0a, 0xd7, 0x0a, 0xe7, 0x0a, 0xf7, 0x0a}},
   {0x8010, 16, {0x07, 0x0a, 0x17, 0x0a, 0x27, 0x0a, 0x37, 0x0a, 0x47, 0x0a, 0x57, 0x0a, 0x67, 0x0a, 0x77, 0x0a}},
   {0x8020, 1, {0xea}},
   {0xa000, 1, {0x40}},
   {0xfffb, 5, {0xa0, 0x00, 0x80, 0x00, 0xa0}},
   {0, 0, {0}}
};
PinState rmb_smb_pin[] = {
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8000, 0x87},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8001, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x00},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0x01},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8002, 0x97},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8003, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x01},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x01},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0x03},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8004, 0xa7},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8005, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x03},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x03},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0x07},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8006, 0xb7},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8007, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x07},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x07},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0x0f},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8008, 0xc7},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8009, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x0f},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x0f},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0x1f},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800a, 0xd7},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800b, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x1f},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x1f},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0x3f},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800c, 0xe7},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800d, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x3f},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x3f},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0x7f},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x800e, 0xf7},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x800f, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x7f},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x7f},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0xff},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8010, 0x07},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8011, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xff},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xff},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0xfe},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8012, 0x17},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8013, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xfe},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xfe},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0xfc},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8014, 0x27},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8015, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xfc},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xfc},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0xf8},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8016, 0x37},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8017, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xf8},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xf8},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0xf0},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8018, 0x47},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x8019, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xf0},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xf0},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0xe0},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x801a, 0x57},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x801b, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xe0},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xe0},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0xc0},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x801c, 0x67},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x801d, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xc0},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0xc0},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0x80},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x801e, 0x77},
   {1, 1, 1, 1, 1, 0, 1, 1, 1, 0x801f, 0x0a},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 0, 1, 0x000a, 0x80},
   {1, 1, 1, 1, 1, 0, 1, 0, 0, 0x000a, 0x00},
   {1, 1, 1, 1, 1, 1, 1, 1, 1, 0x8020, 0xea},
};
const size_t rmb_smb_cycles = sizeof(rmb_smb_pin)/sizeof(rmb_smb_pin[0]);
